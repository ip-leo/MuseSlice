{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/leoip/Library/Mobile%20Documents/com~apple~CloudDocs/Downloads/Intern/Personal_Projects/VocalSlice/src/contexts/ThemeContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>('light');\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    const initialTheme = savedTheme || systemTheme;\n    \n    setThemeState(initialTheme);\n    setMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (mounted) {\n      document.documentElement.classList.remove('light', 'dark');\n      document.documentElement.classList.add(theme);\n      localStorage.setItem('theme', theme);\n    }\n  }, [theme, mounted]);\n\n  const toggleTheme = () => {\n    setThemeState(prev => prev === 'light' ? 'dark' : 'light');\n  };\n\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n  };\n\n  if (!mounted) {\n    return <>{children}</>;\n  }\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}; "],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAYA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,WAAW;;IACtB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAQN,MAAM,gBAAyD;QAAC,EAAE,QAAQ,EAAE;;IACjF,MAAM,CAAC,OAAO,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,MAAM,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;YACzF,MAAM,eAAe,cAAc;YAEnC,cAAc;YACd,WAAW;QACb;kCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,SAAS;gBACX,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS;gBACnD,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;gBACvC,aAAa,OAAO,CAAC,SAAS;YAChC;QACF;kCAAG;QAAC;QAAO;KAAQ;IAEnB,MAAM,cAAc;QAClB,cAAc,CAAA,OAAQ,SAAS,UAAU,SAAS;IACpD;IAEA,MAAM,WAAW,CAAC;QAChB,cAAc;IAChB;IAEA,IAAI,CAAC,SAAS;QACZ,qBAAO;sBAAG;;IACZ;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAa;QAAS;kBAC1D;;;;;;AAGP;IAtCa;KAAA","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///Users/leoip/Library/Mobile%20Documents/com~apple~CloudDocs/Downloads/Intern/Personal_Projects/VocalSlice/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useEffect, useState, useMemo, useCallback } from 'react';\nimport { useSession, signIn, signOut } from 'next-auth/react';\n\ninterface User {\n  id: string;\n  email: string;\n  name?: string;\n  image?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { data: session, status } = useSession();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Memoize user object to prevent unnecessary re-renders\n  const user: User | null = useMemo(() => {\n    if (!session?.user) return null;\n    return {\n      id: session.user.id || '',\n      email: session.user.email || '',\n      name: session.user.name || undefined,\n      image: session.user.image || undefined,\n    };\n  }, [session?.user]);\n\n  // Memoize authentication functions\n  const login = useCallback(async (email: string, password: string) => {\n    const result = await signIn('credentials', {\n      email,\n      password,\n      redirect: false,\n    });\n\n    if (result?.error) {\n      throw new Error(result.error);\n    }\n  }, []);\n\n  const logout = useCallback(async () => {\n    await signOut({ redirect: false });\n  }, []);\n\n  const register = useCallback(async (name: string, email: string, password: string) => {\n    const response = await fetch('/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name, email, password }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'Registration failed');\n    }\n\n    // Auto-login after successful registration\n    await login(email, password);\n  }, [login]);\n\n  useEffect(() => {\n    setIsLoading(status === 'loading');\n  }, [status]);\n\n  // Memoize context value to prevent unnecessary re-renders\n  const value: AuthContextType = useMemo(() => ({\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n    login,\n    logout,\n    register,\n  }), [user, isLoading, login, logout, register]);\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAqBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAQN,MAAM,eAAwD;QAAC,EAAE,QAAQ,EAAE;;IAChF,MAAM,EAAE,MAAM,OAAO,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,wDAAwD;IACxD,MAAM,OAAoB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;sCAAE;YAChC,IAAI,EAAC,oBAAA,8BAAA,QAAS,IAAI,GAAE,OAAO;YAC3B,OAAO;gBACL,IAAI,QAAQ,IAAI,CAAC,EAAE,IAAI;gBACvB,OAAO,QAAQ,IAAI,CAAC,KAAK,IAAI;gBAC7B,MAAM,QAAQ,IAAI,CAAC,IAAI,IAAI;gBAC3B,OAAO,QAAQ,IAAI,CAAC,KAAK,IAAI;YAC/B;QACF;qCAAG;QAAC,oBAAA,8BAAA,QAAS,IAAI;KAAC;IAElB,mCAAmC;IACnC,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2CAAE,OAAO,OAAe;YAC9C,MAAM,SAAS,MAAM,CAAA,GAAA,iJAAA,CAAA,SAAM,AAAD,EAAE,eAAe;gBACzC;gBACA;gBACA,UAAU;YACZ;YAEA,IAAI,mBAAA,6BAAA,OAAQ,KAAK,EAAE;gBACjB,MAAM,IAAI,MAAM,OAAO,KAAK;YAC9B;QACF;0CAAG,EAAE;IAEL,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4CAAE;YACzB,MAAM,CAAA,GAAA,iJAAA,CAAA,UAAO,AAAD,EAAE;gBAAE,UAAU;YAAM;QAClC;2CAAG,EAAE;IAEL,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;8CAAE,OAAO,MAAc,OAAe;YAC/D,MAAM,WAAW,MAAM,MAAM,sBAAsB;gBACjD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAM;oBAAO;gBAAS;YAC/C;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;YACnC;YAEA,2CAA2C;YAC3C,MAAM,MAAM,OAAO;QACrB;6CAAG;QAAC;KAAM;IAEV,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,aAAa,WAAW;QAC1B;iCAAG;QAAC;KAAO;IAEX,0DAA0D;IAC1D,MAAM,QAAyB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;uCAAE,IAAM,CAAC;gBAC5C;gBACA;gBACA,iBAAiB,CAAC,CAAC;gBACnB;gBACA;gBACA;YACF,CAAC;sCAAG;QAAC;QAAM;QAAW;QAAO;QAAQ;KAAS;IAE9C,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;IArEa;;QACuB,iJAAA,CAAA,aAAU;;;KADjC","debugId":null}}]
}